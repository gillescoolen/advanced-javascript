rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function authenticated() {
      return request.auth != null;
    }

    function getProject(project) {
      return get(/databases/$(database)/documents/projects/$(project));
    }

    function isManager(project) {
      let projectData = getProject(project);
      return authenticated() && projectData != null ? get(projectData.data.owner).id == request.auth.uid : authenticated();
    }

    function isMemberOfProject(project) {
      let projectData = getProject(project);
      return authenticated() && data != null ? (request.auth.uid in projectData.data.flatMembers && !projectData.data.archived) : authenticated();
    }

    match /users/{user} {
      allow read;
      allow create;
      allow update: if user == request.auth.uid;
    }

    match /projects/{project} {
      allow read;
      allow write: if isManager(project);

      match /sprints/{sprint} {
        allow read, write: if isMemberOfProject(project);
      }

      match /overview/{task} {
        allow read, write: if isMemberOfProject(project);
      }
    }
  }
}
